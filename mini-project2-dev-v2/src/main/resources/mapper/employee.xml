<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="shop.mtcoding.jobara.employee.model.EmployeeRepository">

    <select id="findAll" resultType="shop.mtcoding.jobara.employee.model.Employee">
        select * from employee_tb
    </select>

    <select id="findAllWithResume" resultType="shop.mtcoding.jobara.employee.dto.EmployeeResp$EmployeeAndResumeRespDto">
        <!-- select user_tb.*, real_name, education, career, title, content
        from user_tb, employee_tb, resume_tb
        where user_tb.id = employee_tb.user_id and employee_tb.user_id = resume_tb.user_id -->
        SELECT user_tb.*, employee_tb.real_name, education, career, title, content
        FROM user_tb
        JOIN employee_tb ON user_tb.id = employee_tb.user_id
        JOIN resume_tb ON employee_tb.user_id = resume_tb.user_id

        WHERE (resume_tb.user_id, resume_tb.created_at) IN (

                SELECT employee_tb.user_id, MAX(created_at)
                FROM employee_tb
                JOIN resume_tb ON employee_tb.user_id = resume_tb.user_id
                GROUP BY employee_tb.user_id
                )

        OFFSET #{startNum} ROWS 
        FETCH NEXT #{row} ROWS ONLY;
    </select>

    <select id="paging" resultType="shop.mtcoding.jobara.board.dto.BoardResp$PagingDto">
        SELECT count(*) total_count,  CEILING( count(*) / #{row} ) total_page, #{page} current_page,
        case when #{page} = 0 then 1
            else 0 
            end first,
        case when #{page} = CEILING( count(*) / #{row} ) - 1 then 1
            else 0 
            end last
        FROM 
            (SELECT user_tb.id
            FROM user_tb
            JOIN employee_tb ON user_tb.id = employee_tb.user_id
            JOIN resume_tb ON employee_tb.user_id = resume_tb.user_id
            WHERE (employee_tb.user_id, resume_tb.created_at) IN (
                    SELECT employee_tb.user_id, MAX(created_at)
                    FROM employee_tb
                    JOIN resume_tb ON employee_tb.user_id = resume_tb.user_id
                    GROUP BY employee_tb.user_id
                    )
            )

	</select>

    <resultMap id="employeeAndResume" type="shop.mtcoding.jobara.employee.dto.EmployeeResp$EmployeeAndResumeRespDto">
        <id property="id" column="id"/>
        <result property="email" column="email"/>
        <result property="address" column="address"/>
        <result property="detailAddress" column="detail_address"/>
        <result property="tel" column="tel"/>
        <result property="profile" column="profile"/>
        <result property="role" column="role"/>
        <result property="createdAt" column="created_at"/>
        <association property="employeeDto" javaType="shop.mtcoding.jobara.employee.dto.EmployeeResp$EmployeeAndResumeRespDto$EmployeeDto">
            <result property="realName" column="real_name"/>
            <result property="education" column="education"/>
            <result property="career" column="career"/>
        </association>
        <association property="resumeDto" javaType="shop.mtcoding.jobara.employee.dto.EmployeeResp$EmployeeAndResumeRespDto$ResumeDto">
            <result property="title" column="title"/>
            <result property="content" column="content"/>
        </association>
    </resultMap>

    <select id="findEmployeeByIdWithResume" resultMap="employeeAndResume">
         SELECT user_tb.*, employee_tb.real_name, education, career, title, content
        FROM user_tb
        JOIN employee_tb ON user_tb.id = employee_tb.user_id
        JOIN resume_tb ON employee_tb.user_id = resume_tb.user_id

        WHERE (resume_tb.user_id, resume_tb.created_at) IN (

                SELECT employee_tb.user_id, MAX(created_at)
                FROM employee_tb
                JOIN resume_tb ON employee_tb.user_id = resume_tb.user_id and employee_tb.user_id = #{id}
                GROUP BY employee_tb.user_id
                )
    </select>

        <resultMap id="employeeIdAndResume" type="shop.mtcoding.jobara.employee.dto.EmployeeResp$EmployeeAndResumeRespDto">
        <id property="id" column="id"/>
        <result property="email" column="email"/>
        <result property="address" column="address"/>
        <result property="detailAddress" column="detail_address"/>
        <result property="tel" column="tel"/>
        <result property="profile" column="profile"/>
        <result property="role" column="role"/>
        <result property="createdAt" column="created_at"/>
        <association property="employeeDto" javaType="shop.mtcoding.jobara.employee.dto.EmployeeResp$EmployeeAndResumeRespDto$EmployeeDto">
            <result property="realName" column="real_name"/>
            <result property="education" column="education"/>
            <result property="career" column="career"/>
        </association>
        <association property="resumeDto" javaType="shop.mtcoding.jobara.employee.dto.EmployeeResp$EmployeeAndResumeRespDto$ResumeDto">
            <result property="title" column="title"/>
            <result property="content" column="content"/>
        </association>
    </resultMap>

    <select id="findEmployeeByIdAndResume" resultMap="employeeIdAndResume">
         SELECT user_tb.*, employee_tb.real_name, education, career, title, content
        FROM user_tb
        JOIN employee_tb ON user_tb.id = employee_tb.user_id
        JOIN resume_tb ON employee_tb.user_id = resume_tb.user_id

        WHERE (resume_tb.user_id, resume_tb.id) IN (

                SELECT employee_tb.user_id, #{resumeId}
                FROM employee_tb
                JOIN resume_tb ON employee_tb.user_id = resume_tb.user_id and employee_tb.user_id = #{id}
                GROUP BY employee_tb.user_id
                )
    </select>

    <select id="findRecommendWithResume" resultType="shop.mtcoding.jobara.employee.dto.EmployeeResp$EmployeeAndResumeRespDto">
        select user_tb.*, real_name, education, career, title, content
        from user_tb, employee_tb, resume_tb
        where user_tb.id = employee_tb.user_id
        and employee_tb.user_id = resume_tb.user_id
        and user_tb.id in (#{id})
        order by created_at limit 1
    </select>
    
    <select id="findRecommendId" resultType="Integer">
        select distinct user_id from employeetech_tb
        where skill = any(select skill from boardtech_tb
        where board_id = (select id from board_tb
        where user_id = #{id}
        order by created_at limit 1))
    </select>

    <select id="findByUserId" resultType="shop.mtcoding.jobara.employee.model.Employee">
        select * from employee_tb where user_id = #{userId}
    </select>

    <insert id="insert">
        insert into employee_tb (user_id) values(#{userId})
    </insert>    

    <delete id="deleteByUserId">
        delete from employee_tb where user_id = #{userId} 
    </delete>    

    <update id="updateByUserId">
        update employee_tb 
           set real_name = #{realName}, 
               career = #{career},
               education = #{education}
        where user_id = #{userId} 
    </update>

</mapper>